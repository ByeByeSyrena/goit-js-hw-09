{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAG9BC,GAFYF,SAASC,cAAc,yBAE5B,CACbE,UAAWJ,EAAKK,SAASC,MAAMC,MAC/BC,SAAUR,EAAKK,SAASI,KAAKF,MAC7BG,WAAYV,EAAKK,SAASM,OAAOJ,QAGjC,IAAIK,EAAS,KAGTC,EAAS,CACXC,SAHa,KAIbR,MAAOM,GAGTZ,EAAKe,iBAAiB,UAetB,SAAoBC,GAElBA,EAAMC,iBAEN,MAAMb,UAAEA,EAASI,SAAEA,EAAQE,WAAEA,GAAeP,EAE5C,GAAIC,EAAY,GAAKI,EAAW,GAAKE,EAAa,EAChDQ,EAAApB,GAASqB,OAAOC,QAAQ,gCAEtB,IAAG,IAAIC,EAAI,EAAGA,GAAKX,EAAYW,GAAK,EAAG,CAE1CT,EAASR,EAAYI,EAAWa,EAE7BC,EACGC,MAAK,EAAGT,SAAAU,EAAQlB,MAAEA,KAAYY,EAAApB,GAASqB,OAAOM,QAC/C,uBAAqBD,QAAiBpB,SACnCsB,OACJ,EAAOZ,SAAUa,EAAAC,YACdV,EAAApB,GAAQqB,OAACU,QAAO,sBACbF,QAA8BvB,Q,KAhC3C,MAAMkB,EAAU,IAAIQ,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACT,MAAQnB,SAAAoB,EAAQ5B,MAAEA,GAAUO,EACNsB,KAAKC,SAAW,GAEpCL,EAAQ,CAAEjB,SAAAoB,E,MAAU5B,IAEpB0B,EAAO,CAAElB,SAAAoB,E,MAAU5B,GAAQ,GAE5BH,EAAKC,UAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst submitBtn = document.querySelector(\"button[type='submit']\");\n\nconst refs = {\nuserDelay: form.elements.delay.value,\nuserStep: form.elements.step.value,\nuserAmount: form.elements.amount.value,\n}\n\nlet delays = null;\nlet position = null;\n\nlet object = {\n  position: position,\n  delay: delays,\n}\n\nform.addEventListener(\"submit\", submitForm);\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const { position, delay } = object;\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, refs.userDelay);\n});\n\n\nfunction submitForm(event) { \n\n  event.preventDefault();\n\n  const { userDelay, userStep, userAmount } = refs;\n\n  if (userDelay < 0 || userStep < 0 || userAmount < 0) {\n    Notiflix.Notify.warning(`❌ Only positive numbers`);\n  } else {\n    for (let i = 0; i <= userAmount; i += 1) {\n   const position = i + 1;\n   delays = userDelay + userStep * i;\n   \n      promise\n        .then(({ position, delay }) => Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${userDelay}ms`\n        ))\n      .catch(({ position, delays }) =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${userDelay}ms`\n          ))\n     };\n   };\n};\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$refs","userDelay","elements","delay","value","userStep","step","userAmount","amount","$47d4ff9957288465$var$delays","$47d4ff9957288465$var$object","position","addEventListener","event","preventDefault","$parcel$interopDefault","Notify","warning","i","$47d4ff9957288465$var$promise","then","position4","success","catch","position5","delays","failure","Promise","resolve","reject","setTimeout","position1","Math","random"],"version":3,"file":"03-promises.1526d389.js.map"}