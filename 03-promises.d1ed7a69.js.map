{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAG9BC,GAFYF,SAASC,cAAc,yBAE5B,CACbE,UAAWJ,EAAKK,SAASC,MAAMC,MAC/BC,SAAUR,EAAKK,SAASI,KAAKF,MAC7BG,WAAYV,EAAKK,SAASM,OAAOJ,QAG7BK,EAAS,KAGTC,EAFW,KAEXA,EAEKD,EAGTZ,EAAKc,iBAAiB,UAetB,SAAoBC,GAElBA,EAAMC,iBAEN,IAAQZ,EAAoCD,EAApCC,UAAWI,EAAyBL,EAAzBK,SAAUE,EAAeP,EAAfO,WAE7B,GAAIN,EAAY,GAAKI,EAAW,GAAKE,EAAa,EAChDO,EAAAnB,GAASoB,OAAOC,QAAS,gCAEvB,IAAG,IAAIC,EAAI,EAAGA,GAAKV,EAAYU,GAAK,EAAG,CAE1CR,EAASR,EAAYI,EAAWY,EAE7BC,EACGC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAeF,EAALjB,M,OAAYW,EAAAnB,GAASoB,OAAOQ,QAC/C,uBAAwCC,OAAfH,EAAS,QAAgBG,OAAVvB,EAAU,M,IAEnDwB,OAAM,SAAAL,G,IAAGM,EAAQN,EAARE,SAAgBF,EAANO,O,OAChBb,EAAAnB,GAASoB,OAAOa,QACd,sBAAqCJ,OAAfE,EAAS,QAAgBF,OAAVvB,EAAU,M,QAhC3D,IAAMiB,EAAU,IAAIW,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACT,IAAQC,EAAoBvB,EAAVP,EAAUO,EACNwB,KAAKC,SAAW,GAEpCL,EAAQ,CAAER,SAAAW,EAAU9B,UAEpB4B,EAAO,CAAET,SAAAW,EAAU9B,S,GAEpBH,EAAKC,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst submitBtn = document.querySelector(\"button[type='submit']\");\n\nconst refs = {\nuserDelay: form.elements.delay.value,\nuserStep: form.elements.step.value,\nuserAmount: form.elements.amount.value,\n}\n\nlet delays = null;\nlet position = null;\n\nlet object = {\n  position: position,\n  delay: delays,\n}\n\nform.addEventListener(\"submit\", submitForm);\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const { position, delay } = object;\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, refs.userDelay);\n});\n\n\nfunction submitForm(event) { \n\n  event.preventDefault();\n\n  const { userDelay, userStep, userAmount } = refs;\n\n  if (userDelay < 0 || userStep < 0 || userAmount < 0) {\n    Notiflix.Notify.warning(`❌ Only positive numbers`);\n  } else {\n    for (let i = 0; i <= userAmount; i += 1) {\n   const position = i + 1;\n   delays = userDelay + userStep * i;\n   \n      promise\n        .then(({ position, delay }) => Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${userDelay}ms`\n        ))\n      .catch(({ position, delays }) =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${userDelay}ms`\n          ))\n     };\n   };\n};\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$refs","userDelay","elements","delay","value","userStep","step","userAmount","amount","$ce04d3a99e08e73b$var$delays","$ce04d3a99e08e73b$var$object","addEventListener","event","preventDefault","$parcel$interopDefault","Notify","warning","i","$ce04d3a99e08e73b$var$promise","then","param","position4","position","success","concat","catch","position5","delays","failure","Promise","resolve","reject","setTimeout","position1","Math","random"],"version":3,"file":"03-promises.d1ed7a69.js.map"}